plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "dagger.hilt.android.plugin"
    id "com.github.passit.project-application"
}

def mockPropertiesFile = rootProject.file("template.properties")

def appPropertiesFile = rootProject.file("app.properties")
def appProperties = new Properties()

if (appPropertiesFile.exists()) {
    appProperties.load(new FileInputStream(appPropertiesFile))
} else {
    appProperties.load(new FileInputStream(mockPropertiesFile))
}

android {
    signingConfigs {
        if (appPropertiesFile.exists()) {
            release {
                storeFile rootProject.file(appProperties["storeFile"])
                keyAlias appProperties["keyAlias"]
                keyPassword appProperties["keyPassword"]
                storePassword appProperties["storePassword"]
            }
        }
    }
    compileSdkVersion Android.compileSdkVersion
    buildToolsVersion Android.buildToolsVersion

    defaultConfig {
        applicationId Android.applicationId
        minSdkVersion Android.minSdkVersion
        targetSdkVersion Android.targetSdkVersion
        versionCode Android.versionCode
        versionName Android.versionName

        multiDexEnabled = true

        testInstrumentationRunner = getInstrumentation()
    }

    buildTypes {
        debug {
            buildConfigField("String", "TEST_TAGS", "\"" + getTestTags() + "\"")
            buildConfigField "String", "TEST_SCENARIO", "\"" + getTestScenario() + "\""
            debuggable true
        }
        release {
            minifyEnabled true
            debuggable false
            shrinkResources true
            zipAlignEnabled true
            renderscriptDebuggable false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            if (appPropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    }
}

def getTestTags() {
    project.getProperties().get("tags") ?: ""
}

def getTestScenario() {
    project.getProperties().get("scenario") ?: ""
}

def getInstrumentation() {
    project.hasProperty("bdd") ? "com.github.passit.runner.CucumberInstrumentationRunner" : "androidx.test.runner.AndroidJUnitRunner"
}


dependencies {
    implementation Libs.kotlinStd
    implementation Libs.appcompat
    implementation Libs.activity

    // aws amplify
    Libs.amplify.each { amplify -> implementation amplify }

    // hilt dependency injection
    implementation Libs.hiltAndroid
    implementation Libs.hiltLifecycleViewModel
    kapt Libs.hiltCompiler
    kapt Libs.hiltAndroidCompiler

    // material design
    implementation(Libs.materialDesign)

    // navigation fragment
    implementation Libs.fragment
    implementation Libs.navigationFragment

    // coroutines
    implementation Libs.coroutines

    implementation Libs.viewpager

    implementation "com.google.code.gson:gson:2.8.6"

    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"

    implementation "androidx.core:core-ktx:1.3.2"

    implementation "androidx.constraintlayout:constraintlayout:2.0.4"

    // square picasso
    implementation "com.squareup.picasso:picasso:2.71828"

    // dexter
    implementation Libs.dexter

    testImplementation TestLibs.junit
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"

    // bdd
    androidTestImplementation "io.cucumber:cucumber-android:4.3.1"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:3.3.0"
}

amplify {
    backendStackName "AppStack"
    amplifyTemplate file("amplifyconfiguration.mustache")
    awsTemplate file("awsconfiguration.mustache")
}
